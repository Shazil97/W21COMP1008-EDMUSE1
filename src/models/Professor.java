package models;

import utilities.DBUtility;

import java.time.LocalDate;
import java.util.ArrayList;

public class Professor extends Person{
    private ArrayList<String> teachables;
    private int employeeNum;

    public Professor(String firstName, String lastName, String address, LocalDate birthday, int employeeNum) {
        super(firstName, lastName, address, birthday);
        setEmployeeNum(employeeNum);
        teachables = new ArrayList<>();
    }

    /**
     * This method will validate that the teachable subject is part of a list of valid course
     * codes that we get from the DB. If it is valid, it will be added to the list of teachable subjects
     * @return
     */
    public void addTeachable(String newCourseCode)
    {
        if (ListFromDB.getCourseCodes().contains(newCourseCode))
            teachables.add(newCourseCode);
        else
            throw new IllegalArgumentException("The course code must already be defined in the DB");

    }

    public ArrayList<String> getTeachables() {
        return teachables;
    }

    public int getEmployeeNum() {
        return employeeNum;
    }

    /**
     * This is the employee number that would typically be generated by the database
     * as a key field (guarenteed to be unique)
     * @param employeeNum
     */
    private void setEmployeeNum(int employeeNum) {
        if (employeeNum>=10000)
            this.employeeNum = employeeNum;
        else
            throw new IllegalArgumentException("Employee Number must be greater than or equal to 10000");
    }

    /**
     * This method will validate that the professor can teach a subject.  If the argument is in
     * the list of teachable subjects, the method returns true, false otherwise
     */
    public boolean canTeach(String courseCode)
    {
        return teachables.contains(courseCode);
    }
}